// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingAggSite.DataModels;

namespace ShoppingAggSite.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    [Migration("20220131214444_InitialCreateFix")]
    partial class InitialCreateFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ShoppingAggSite.DataModels.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QualityRatingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.ItemPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InEffectFrom")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemPrice");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.ItemRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("FiveStarRating")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RatingDesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("ItemRating");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressFirstLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressSecondLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressThirdLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoreImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Item", b =>
                {
                    b.HasOne("ShoppingAggSite.DataModels.Store", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.ItemPrice", b =>
                {
                    b.HasOne("ShoppingAggSite.DataModels.Item", "Item")
                        .WithMany("HistoricPrices")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.ItemRating", b =>
                {
                    b.HasOne("ShoppingAggSite.DataModels.Item", "Item")
                        .WithOne("QualityRating")
                        .HasForeignKey("ShoppingAggSite.DataModels.ItemRating", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Location", b =>
                {
                    b.HasOne("ShoppingAggSite.DataModels.Store", "Store")
                        .WithOne("Location")
                        .HasForeignKey("ShoppingAggSite.DataModels.Location", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Store", b =>
                {
                    b.HasOne("ShoppingAggSite.DataModels.Brand", "Brand")
                        .WithMany("Stores")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Brand", b =>
                {
                    b.Navigation("Stores");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Item", b =>
                {
                    b.Navigation("HistoricPrices");

                    b.Navigation("QualityRating");
                });

            modelBuilder.Entity("ShoppingAggSite.DataModels.Store", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
